# Copyright 2018-2020 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno"
version = "1.1.2"
license = "MIT"
authors = ["the Deno authors"]
edition = "2018"
description = "Provides the deno executable"
repository = "https://github.com/denoland/deno"
default-run = "deno"

[[bin]]
name = "deno"
path = "main.rs"

[build-dependencies]
deno_core = { path = "../core", version = "0.48.1" }
deno_typescript = { path = "../deno_typescript", version = "0.48.1" }

[dependencies]
deno_core = { path = "../core", version = "0.48.2" }
deno_lint = "0.1.10"
deno_typescript = { path = "../deno_typescript", version = "0.48.2" }

atty = "0.2.14"
base64 = "0.12.2"
bytes = "0.5.5"
byteorder = "1.3.4"
clap = "2.33.1"
dissimilar = "1.0.2"
dlopen = "0.1.8"
dprint-plugin-typescript = "0.19.3"
futures = { version = "0.3.5", features = ["compat", "io-compat"] }
http = "0.2.1"
indexmap = "1.4.0"
lazy_static = "1.4.0"
libc = "0.2.71"
log = "0.4.8"
notify = "5.0.0-pre.2"
rand = "0.7.3"
regex = "1.3.9"
reqwest = { version = "0.10.6", default-features = false, features = ["rustls-tls", "stream", "gzip", "brotli"] }
ring = "0.16.15"
rustyline = { version = "6.2", default-features = false }
serde = { version = "1.0.112", features = ["derive"] }
serde_derive = "1.0.112"
serde_json = { version = "1.0.55", features = [ "preserve_order" ] }
sys-info = "0.7.0"
sourcemap = "5.0.0"
tempfile = "3.1.0"
termcolor = "1.1.0"
tokio = { version = "0.2.21", features = ["rt-core", "tcp", "udp", "uds", "process", "fs", "blocking", "sync", "io-std", "macros", "time"] }
tokio-rustls = "0.13.1"
url = "2.1.1"
utime = "0.3.0"
webpki = "0.21.3"
webpki-roots = "0.19.0"
walkdir = "2.3.1"
warp = "0.2.3"
semver-parser = "0.9.0"
uuid = { version = "0.8.1", features = ["v4"] }
swc_ecma_visit = "0.5.1"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.8", features = ["knownfolders", "objbase", "shlobj",
"winbase", "winerror"] }
fwdansi = "1.1.0"

[target.'cfg(unix)'.dependencies]
nix = "0.17.0"

[dev-dependencies]
os_pipe = "0.9.2"
# Used for testing inspector. Keep in-sync with warp.
tokio-tungstenite = { version = "0.10.1", features = ["connect"] }
test_util = { path = "../test_util" }

[target.'cfg(unix)'.dev-dependencies]
pty = "0.2.2"
